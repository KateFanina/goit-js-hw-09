{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,QAE9BC,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,IAIbL,EAAKY,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMC,EAAcF,EAAMG,cAE1B,IAAIX,GAASU,EAAYV,MAAMY,MAC/B,MAAMC,GAAQH,EAAYG,KAAKD,MACzBE,GAAUJ,EAAYI,OAAOF,MAEnC,IAAK,IAAIG,EAAM,EAAGA,GAAOD,EAAQC,IAC/BjB,EAAciB,EAAKf,GAChBgB,MAAKC,GAAUC,QAAQC,IAAI,oBAAqBF,KAChDG,OAAMC,GAASH,QAAQC,IAAI,oBAAqBE,KACnDrB,GAASa,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const currentForm = event.currentTarget;\n\n  let delay = +currentForm.delay.value;\n  const step = +currentForm.step.value;\n  const amount = +currentForm.amount.value;\n\n  for (let idx = 1; idx <= amount; idx++) {\n    createPromise(idx, delay)\n      .then(result => console.log('recivedPromise:  ', result))\n      .catch(error => console.log('error:           ', error));\n    delay += step;\n  }\n});\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","currentForm","currentTarget","value","step","amount","idx","then","result","console","log","catch","error"],"version":3,"file":"03-promises.dd49bab0.js.map"}